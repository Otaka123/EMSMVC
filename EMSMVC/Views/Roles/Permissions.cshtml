@using EMSMVC.ViewModels

@model RolePermissionsViewModel
@{
    ViewData["Title"] = "صلاحيات الدور: " + Model.RoleName;
    Layout = "_Layout";
}

<div class="card">
    <div class="card-header">
        <h5 class="mb-0"><i class="fas fa-key"></i> @ViewData["Title"]</h5>
    </div>
    <div class="card-body">
        <form asp-action="Permissions" asp-controller="Roles" method="post">
            <input type="hidden" asp-for="RoleId" />
            <input type="hidden" asp-for="RoleName" />

            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    <i class="fas fa-check-circle"></i> @TempData["SuccessMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }

            <div class="row">
                <div class="col-md-12">
                    <h6>الصلاحيات الحالية:</h6>
                    @if (Model.CurrentPermissions.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-sm table-bordered">
                                <thead>
                                    <tr>
                                        <th>اسم الصلاحية</th>
                                        <th>الفئة</th>
                                        <th>النوع</th>
                                        <th>الوصف</th>
                                        <th>الإجراء</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var permission in Model.CurrentPermissions)
                                    {
                                        <tr id="permission-@permission.Id">
                                            <td>@permission.Name</td>
                                            <td>@permission.Category</td>
                                            <td>@permission.PermissionType</td>
                                            <td>@permission.Description</td>
                                            <td>
                                                <button type="button" class="btn btn-sm btn-danger"
                                                        onclick="removePermission('@permission.Id')">
                                                    <i class="fas fa-trash"></i> إزالة
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-info">لا توجد صلاحيات مخصصة لهذا الدور</div>
                    }
                </div>
            </div>

            <div class="row mt-4">
                <div class="col-md-12">
                    <h6>إضافة صلاحيات جديدة:</h6>

                    <!-- زر لتحديد/إلغاء تحديد الكل -->
                    <div class="mb-3">
                        <button type="button" class="btn btn-outline-primary btn-sm" id="selectAllBtn">
                            <i class="fas fa-check-square"></i> تحديد الكل
                        </button>
                        <button type="button" class="btn btn-outline-secondary btn-sm" id="deselectAllBtn">
                            <i class="fas fa-times-circle"></i> إلغاء تحديد الكل
                        </button>
                    </div>

                    <!-- تصفية حسب الفئة -->
                    <div class="mb-3">
                        <input type="text" id="permissionSearch" class="form-control" placeholder="بحث في الصلاحيات...">
                    </div>

                    <!-- عرض الصلاحيات حسب الفئات -->
                    <div class="permissions-container row">
                        @foreach (var category in Model.AllPermissions.GroupBy(p => p.Category).OrderBy(g => g.Key))
                        {
                            <div class="category-section mb-4">
                                <h6 class="category-header bg-light p-2 rounded">
                                    <i class="fas fa-folder"></i> @category.Key
                                    <span class="badge bg-secondary">@category.Count()</span>
                                </h6>

                                <div class="row">
                                    @foreach (var permission in category.OrderBy(p => p.Name))
                                    {
                                        <div class="col-md-4 mb-2 permission-item">
                                            <div class="form-check">
                                                <input class="form-check-input permission-checkbox"
                                                       type="checkbox"
                                                       name="SelectedPermissionIds"
                                                       value="@permission.Id"
                                                       id="permission_@permission.Id"
                                                       @(Model.CurrentPermissions.Any(p => p.Id == permission.Id) ? "checked" : "")>
                                                <label class="form-check-label" for="permission_@permission.Id">
                                                    <strong>@permission.Name</strong>
                                                    <br>
                                                    <small class="text-muted">@permission.Description</small>
                                                    <br>
                                                    <span class="badge bg-info">@permission.PermissionType</span>
                                                </label>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>

            <div class="form-group mt-3">
                <button type="submit" class="btn btn-success">
                    <i class="fas fa-save"></i> حفظ الصلاحيات
                </button>
                <a href="@Url.Action("Index")" class="btn btn-secondary">
                    <i class="fas fa-arrow-left"></i> رجوع
                </a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
              function removePermission(permissionId) {
            if (confirm('هل أنت متأكد من إزالة هذه الصلاحية؟')) {
                // استخدام AJAX لإزالة الصلاحية بدون إعادة تحميل الصفحة
                $.post('@Url.Action("RemovePermissionAjax", "Roles")', {
                    roleId: '@Model.RoleId',
                    permissionId: permissionId,
                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                }, function(response) {
                    if (response.success) {
                        // إزالة الصف من الجدول بدون إعادة تحميل
                        $('#permission-' + permissionId).fadeOut(300, function() {
                            $(this).remove();
                            // تحديث العداد إذا كان موجودًا
                            updatePermissionsCount();
                        });

                        // إلغاء تحديد الـ checkbox إذا كان محددًا
                        $('#permission_' + permissionId).prop('checked', false);

                        // عرض رسالة النجاح
                        showAlert('success', response.message);
                    } else {
                        showAlert('error', response.message);
                    }
                }).fail(function() {
                    showAlert('error', 'حدث خطأ أثناء إزالة الصلاحية');
                });
            }
        }

        // دالة لعرض الرسائل
        function showAlert(type, message) {
            var alertClass = type === 'success' ? 'alert-success' : 'alert-danger';
            var icon = type === 'success' ? 'fa-check-circle' : 'fa-exclamation-circle';

            var alertHtml = '<div class="alert ' + alertClass + ' alert-dismissible fade show" role="alert">' +
                '<i class="fas ' + icon + '"></i> ' + message +
                '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>' +
                '</div>';

            // إضافة الرسالة في أعلى النموذج
            $('.card-body').prepend(alertHtml);

            // إزالة الرسالة تلقائيًا بعد 5 ثواني
            setTimeout(function() {
                $('.alert').alert('close');
            }, 5000);
        }

        // دالة لتحديث العداد
        function updatePermissionsCount() {
            var count = $('table tbody tr').length;
            $('#permissions-count').text(count);

            if (count === 0) {
                $('table').hide();
                $('.no-permissions-alert').show();
            }
        }

        // تحديد/إلغاء تحديد الكل
        $('#selectAllBtn').click(function() {
            $('.permission-checkbox').prop('checked', true);
        });

        $('#deselectAllBtn').click(function() {
            $('.permission-checkbox').prop('checked', false);
        });

        // البحث في الصلاحيات
        $('#permissionSearch').on('keyup', function() {
            var searchText = $(this).val().toLowerCase();

            $('.permission-item').each(function() {
                var permissionText = $(this).text().toLowerCase();
                if (permissionText.indexOf(searchText) === -1) {
                    $(this).hide();
                } else {
                    $(this).show();
                }
            });

            // إخفاء الفئات الفارغة
            $('.category-section').each(function() {
                var visibleItems = $(this).find('.permission-item:visible');
                if (visibleItems.length === 0) {
                    $(this).hide();
                } else {
                    $(this).show();
                }
            });
        });

        // إضافة تأثير عند التحديد
        $('.permission-checkbox').change(function() {
            if ($(this).is(':checked')) {
                $(this).closest('.form-check').addClass('border-success border rounded p-2');
            } else {
                $(this).closest('.form-check').removeClass('border-success border rounded p-2');
            }
        });
    </script>

    <style>
        .permission-item {
            transition: all 0.3s ease;
        }

        .category-header {
            cursor: pointer;
        }

        .form-check-label {
            cursor: pointer;
        }

        .permission-checkbox:checked + .form-check-label {
            color: #198754;
            font-weight: bold;
        }
    </style>
}